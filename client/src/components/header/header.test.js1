import React from 'react';
import { shallow, render, mount } from 'enzyme';

import Header from './header.component';

import NavigationBar from '../navigation/navigation-bar/navigation-bar.component';
import BurgerIcon from '../navigation/burger icon/icon-burger.component';
import SlideBar from '../navigation/slide bar/slide-bar.component';

import useClickOutside from '../../utils/useClickOutside';
import appMenu from '../navigation/appMenu';
import siteMenu from '../navigation/siteMenu';

import logo from '../../graphics/logo_pink.png';
import LogInIcon from '../icons/icon-log-in.component';
import LogOutIcon from '../icons/icon-log-out.component';


const setUp = (props = {}) => {
    // return mount(<Header {...props} />);
    // return render(<Header {...props} />);
    return shallow(<Header {...props} />);
}

describe('Header component rendering test set', () => {

    let component;
    beforeEach(() => {
        component = setUp();
    });

    it('Should render <NavigationBar /> component without errors', () => {
        expect(
            component
                .find(NavigationBar)
                .length
        ).toBe(1);
    });

    it('Should render <SlideBar /> component without errors', () => {
        expect(
            component
                .find(SlideBar)
                .length
        ).toBe(1);
    });

    it('Should render <BurgerIcon /> component without errors', () => {
        expect(
            component
                .find(BurgerIcon)
                .length
        ).toBe(1);
    });

    it('Should render class="header__content--mb" inside <Header /> component', () => {
        expect(
            component
                .find('.header__content--mb')
                .length
        ).toBe(1);
    });

    it('Should render class="header__content--dt" inside <Header /> component', () => {
        expect(
            component
                .find('.header__content--dt')
                .length
        ).toBe(1);
    });

    it('Should render class="header__nav-box" inside <Header /> component', () => {
        expect(
            component
                .find('.header__nav-box')
                .length
        ).toBe(2);
    });

    it('Should render class="header__nav-box--mb" inside <Header /> component', () => {
        expect(
            component
                .find('.header__nav-box--mb')
                .length
        ).toBe(1);
    });

    it('Should render <img /> inside <NavigationBar /> component', () => {
        expect(
            component
                .find('img')
                .length
        ).toBe(1);
    });

    it('Should contain <Link /> to "/" (Home page)', () => {
        expect(
            component
                .find('Link')
                .at(0)
                .prop('to')
        ).toEqual('/');
    });

    it('Should contain <Link /> to "/about" (About page)', () => {
        expect(
            component
                .find('Link')
                .at(1)
                .prop('to')
        ).toEqual('/about');
    });

    it('Should contain <Link /> to "/platform" (Platform page)', () => {
        expect(
            component
                .find('Link')
                .at(2)
                .prop('to')
        ).toEqual('/platform');
    });

    it('Should contain <Link /> to "/contact" (Contact page)', () => {
        expect(
            component
                .find('Link')
                .at(3)
                .prop('to')
        ).toEqual('/contact');
    });

    it('Should contain <Link /> to "/signin" (Sign in page)', () => {
        const props = {
            pathname: '/signin',
            state: { role: 'student' }
        }

        expect(
            component
                .find('Link')
                .at(4)
                .prop('to')
        ).toEqual(props);
    });

})

describe('Header component conditional rendering test set', () => {

    let component;
    beforeEach(() => {
        component = setUp({
            data: {
                _id: '1234567'
            }
        });
    });

    it('Should contain <Link /> to "/signin" (Sign in page)', () => {
        expect(
            component
                .find('Link')
                .at(1)
                .prop('to')
        ).toEqual('/about');
    });

})

// describe('Navigation bar component test set', () => {

//     let component;
//     beforeEach(() => {
//         component = setUp();
//     });

//     it('Should render <NavigationBar /> component without errors', () => {
//         expect(
//             component
//                 .find('nav')
//                 .length
//         ).toBe(1);
//     });

//     it('Should render class="header__logo-box" inside <NavigationBar /> component', () => {
//         expect(
//             component
//                 .find('.header__logo-box')
//                 .length
//         ).toBe(2);
//     });

//     it('Should render <img /> inside <NavigationBar /> component', () => {
//         expect(
//             component
//                 .find('img')
//                 .length
//         ).toBe(1);
//     });

//     it('Should render <ul /> list inside <NavigationBar /> component', () => {
//         expect(
//             component
//                 .find('ul')
//                 .length
//         ).toBe(1);
//     });

//     it('Should render four <li /> items inside <NavigationBar /> component', () => {
//         expect(
//             component
//                 .find('li')
//                 .length
//         ).toBe(5);
//     });

//     it('Should contain <Link /> to "/" (Home page)', () => {
//         expect(
//             component
//                 .find('Link')
//                 .at(0)
//                 .prop('to')
//         ).toEqual('/');
//     });

//     it('Should contain <Link /> to "/about" (About page)', () => {
//         expect(
//             component
//                 .find('Link')
//                 .at(1)
//                 .prop('to')
//         ).toEqual('/about');
//     });

//     it('Should contain <Link /> to "/platform" (Platform page)', () => {
//         expect(
//             component
//                 .find('Link')
//                 .at(2)
//                 .prop('to')
//         ).toEqual('/platform');
//     });

//     it('Should contain <Link /> to "/contact" (Contact page)', () => {
//         expect(
//             component
//                 .find('Link')
//                 .at(3)
//                 .prop('to')
//         ).toEqual('/contact');
//     });

//     it('Should contain <Link /> to "/signin" (Sign in page)', () => {
//         const props = {
//             pathname: '/signin',
//             state: { role: 'student' }
//         }

//         expect(
//             component
//                 .find('Link')
//                 .at(4)
//                 .prop('to')
//         ).toEqual(props);
//     });

//     //***************************************************/

//     // it('Should render <ul /> list inside <NavigationBar /> component', () => {

//     //     expect(
//     //         shallow(<Button type='reset' />).find('.btn').prop('type')
//     //     ).toEqual('reset');
//     // });

//     // it('Test click event', () => {
//     //     const mockCallBack = jest.fn();

//     //     const button = shallow((<Button onClick={mockCallBack}></Button>));
//     //     button.find('button').simulate('click');
//     //     expect(mockCallBack.mock.calls.length).toEqual(1);
//     // });
// })